const axios = require("axios");
const express = require("express");
const cors = require("cors");

const app = express();
app.use(express.json());
app.use(cors({ origin: true }));

app.post("/authenticate", async (req, res) => {
  const { username } = req.body;
  try {
    const r = await axios.put(
      "https://api.chatengine.io/users/",
      { username: username, secret: username, first_name: username },
      { headers: { "private-key": "d94810d4-1b75-4248-9759-a5de78554b91" } }
    );
    return res.status(r.status).json(r.data);
  } catch (e) {
    // Check if the error has a response object
    if (e.response) {
      // Error generated by Axios with a server response outside the range of 2xx
      return res.status(e.response.status).json(e.response.data);
    } else {
      // Error generated by Axios without a server response, or a different error
      return res
        .status(500)
        .json({ message: "An error occurred", error: e.message });
    }
  }
});

app.listen(3001);
